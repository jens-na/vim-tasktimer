*tasktimer.txt*                 task timer for Vim                     30.07.2013 

Author:       Jens Nazarenus <jens@0x6a.de>
License:      Vim license, see license
Homepage:     http://github.com/jens-na/vim-tasktimer
Version:      1.0

===============================================================================
Contents                                                    *tasktimer-contents*

         1 Introduction...................... |tasktimer-introduction|
           1.1 Starting and Stoppping ....... |tasktimer-startstop|
           1.2 Calculation and Listing ...... |tasktimer-calculation|
         2 Installation ..................... |tasktimer-installation|
         3 Usage ............................ |tasktimer-usage|
           3.1 Commands ..................... |tasktimer-commands|
         4 Configuration .................... |tasktimer-configuration|
           4.1 Variables .................... |tasktimer-variables|
           4.2 Format functions ............. |tasktimer-formatfunc|
           4.3 Exec functions ............... |tasktimer-execfunc|
         5. Extending Tasktimer ............. |tasktimer-extending|
         6. Troubleshooting & Known issues .. |tasktimer-troublehooting|
         7. Credits ......................... |tasktimer-credits|

===============================================================================
1 Introduction                                          *tasktimer-introduction*

Tasktimer is a plugin for timing tasks. You can start/stop tasks and keep
track of already completed tasks. Furthermore the plugin provides functions to
list and calculate with the task times.

===============================================================================
1.1 Starting and Stopping                                  *tasktimer-startstop*

If you want to start the timer because you want to start a task you can type
the following command:
>
    :TasktimerStart <task>

If you have finished your work with the task you can stop the task again with
the command:
>
    :TasktimerStop
>
To get a list of all your completed (and still active) tasks you can simply
use the command `:TasktimerList`.

===============================================================================
1.2 Calculation and Listing                              *tasktimer-calculation*

===============================================================================
2 Installation                                          *tasktimer-installation*

If you don't have a preferred way of installing plugins, I suggest to install
vim-pathogen first and clone the repository in the directory ~/.vim/bundle.
>
    cd ~/.vim/bundle
    git clone https://github.com/jens-na/vim-tasktimer.git
<
If you don't wnat to ues vim-pathogen you can still install it in your ~/.vim/
folder directly.

===============================================================================
3 Usage                                                        *tasktimer-usage*

===============================================================================
3.1 Commands                                                *tasktimer-commands*

:TasktimerStart {task}                                         *:TasktimerStart*
  Starts the timer for the specified task and saves the taskname with the
  current time in the the tasktimer (|g:tasktimer_file|). All times in this
  file is the result of the function `localtime().`

:TasktimerStop                                                  *:TasktimerStop*
  Stops the timer for the currently acive task. The end time in
  |g:tasktimer_file| gets updated to the current time.

:TasktimerStatus                                              *:TasktimerStatus*
  Shows information about the currently active task. If there is no active
  task, this command will print a message that there is no active task at the
  moment.

:Tasktimer [{tasks...}]                                             *:Tasktimer*
  Lists the timed and currently active tasks if no parameter given. The
  command takes up to 20 parameters where you can specify exactly which tasks
  should be displayed. If no task is found for the specified scope the command
  will print the message: No task found.

:TasktimerClear                                                *:TasktimerClear*
  Clears the |g:tasktimer_file|. This fnuction will delete all your timed
  tasks!
===============================================================================
4 Configuration                                        *tasktimer-configuration*

===============================================================================
4.1 Variables                                              *tasktimer-variables*

                                                              *g:tasktimer_file*
g:tasktimer_file~
Default: ~/.vim_tasktimer

The file where all the timed tasks will be saved.

Example:
>
    let g:tasktimer_file = expand('$HOME$') . /.my_custom_task_file
<

                                                        *g:tasktimer_timeformat*
g:tasktimer_timeformat~
Default: %Y-%m-%d %H:%M 

The pattern which represents a time in the tasktimer buffer. The pattern is
similar to the pattern of the C function strftime(). See 'man 3 strftime' for
more information about the pattern.

Example:
>
    let g:tasktimer_timeformat = "%d.%m.%d - %H:%M"
<

                                                        *g:tasktimer_dateformat*
g:tasktimer_dateformat~
Default: %Y-%m-%d 

The pattern which represents a date in the tasktimer buffer. The pattern is
similar to the pattern of the C function strftime(). See 'man 3 strftime' for
more information about the pattern.

Example:
>
    let g:tasktimer_dateformat = "%d.%m.%Y"
<

                                                         *g:tasktimer_windowpos*
g:tasktimer_windowpos~
Default: belowright 

The window position of the tasktimer buffer. You can use values like botright,
topleft, vertical, etc.

Example:
>
    let g:tasktimer_windowpos = "topleft"
<

                                                      *g:tasktimer_windowheight*
g:tasktimer_windowheight~
Default: 10

The window height of the tasktimer buffer as integer.

Example:
>
    let g:tasktimer_windowheight = "5"
>

===============================================================================
4.2 Format functions                                      *tasktimer-formatfunc*

                                                 *g:tasktimer_formatfunc.format*
g:tasktimer_formatfunc.format~
Default: tasktimer#format

Defines a custom function to format the time for each individual task.

Example:
>
    let g:tasktimer_formatfunc = {
    \ 'format' : 'Tasktimer_Custom_Format'
    \ }

    function! Tasktimer_Custom_Format(seconds)
      let time = tasktimer#parsedecimal(a:seconds)
      return printf('%d,%.2d', time.hours, time.minutes)
    endfunction
<
                                           *g:tasktimer_formatfunc.format_total*
g:tasktimer_formatfunc.format_total~
Default: tasktimer#format

Defines a custom function to format the total value of a task.

Example:
>
    let g:tasktimer_formatfunc = {
    \ 'format_total' : 'Tasktimer_Custom_Format'
    \ }
<

                                        *g:tasktimer_formatfunc.format_taskname*
g:tasktimer_formatfunc.format_taskname~
Default: tasktimer#formattask

Defines the name of the task. Here you have the possibility to add a default
prefix or postfix to your taskname.

Example:
>
    let g:tasktimer_formatfunc = {
    \ 'format_taskname' : 'Tasktimer_Custom_Task_Name'
    \ }

    function! Tasktimer_Custom_Task_Name(taskname)
      return "ABC-" . a:taskname
    endfunction

===============================================================================
5 Extending Tasktimer                                      *tasktimer-extending*

===============================================================================
6 Troubleshooting & Known issues                     *tasktimer-troubleshooting*

===============================================================================
7 Credits                                                    *tasktimer-credits*







vim:tw=78:ts=8:ft=help:norl:
